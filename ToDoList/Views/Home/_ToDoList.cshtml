@model IEnumerable<ToDoItem>

@if (!Model.Any())
{
    <h2> There's nothing here. Add a todo item now! </h2>
}
else
{
    foreach (var item in Model)
    {
        var changeStatusEvent = "changeStatusOfItem(" + item.ID + ", $(this).prop('checked'))";
        var deleteItemEvent = "deleteItem(" + item.ID + ")";
        var editItemLink = "editItem(" + item.ID + ")";
        var rowClass = "";
        switch (item.PriorityID)
        {
            case 1:
                rowClass = "toDo-lowPriority";
                break;
            case 2:
                rowClass = "toDo-mediumPriority";
                break;
            case 3:
                rowClass = "toDo-highPriority";
                break;
            default:
                break;
        }
        <div class="container">
            <div class="row top-buffer item-row">
                <div class="col-sm-1 toDo-cb">
                    @Html.CheckBoxFor(m => item.IsComplete, new { onclick = @changeStatusEvent, @class="custom-control-input"})
                </div>
                <div class="col-sm-7 toDo-description">
                    @Html.Label("", item.Description)
                </div>
                <div class="col-sm-4 toDo-buttonGroup">
                    <button onclick=@editItemLink class="btn btn-default"> Edit </button>
                    <button onclick=@deleteItemEvent class="btn btn-warning"> Delete </button>
                </div>
            </div>
            @*<div class="col-sm-2">
                    <button onclick=@editItemLink class ="btn btn-warning"> Edit </button>
                </div>*@
        </div>
    }
}